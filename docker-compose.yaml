name: impact-analysis-snapshot

services:
  nats:
    image: nats:alpine
    container_name: nats
    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222'
    networks: ['impact-analysis']
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O - || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
  nats-1:
    image: nats:alpine
    container_name: nats-1
    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222 --http_port 8222'
    networks: ['impact-analysis']
    depends_on: ['nats']
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O - || exit 1
      interval: 30s
      timeout: 5s
      retries: 5
  nats-2:
    image: nats:alpine
    container_name: nats-2
    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222 --http_port 8222'
    networks: ['impact-analysis']
    depends_on: ['nats']
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O - || exit 1
      interval: 30s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14-alpine
    container_name: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - db_data_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks: ['impact-analysis']
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 30s
      timeout: 5s
      retries: 5

  orientdb:
    image: orientdb:3.2.36
    container_name: ${ORIENT_DB_CONTAINER}
    environment:
      ORIENTDB_ROOT_USER: ${ORIENT_DB_USER}
      ORIENTDB_ROOT_PASSWORD: ${ORIENT_DB_PASSWORD}
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:2480/listDatabases']
      interval: 30s
      timeout: 10s
    ports:
      # - 2480:2480
      - 2424:2424
    volumes:
      - orient_data_volume:/orientdb/databases

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .docker-conf/config.json:/config.json
    command: ["--interval", "7200", "--cleanup", "--label-enable"]
    deploy:
      replicas: ${ENABLE_WATCHTOWER:-0}

  core:
    pull_policy: always
    image: ${CORE_IMAGE}:${CORE_TAG}
    networks: ['impact-analysis']
    depends_on: ['nats', 'postgres']
    container_name: ${CORE_CONTAINER_NAME}
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '${CORE_PORT}:8080'
      - '9092:9092'
    env_file:
      - ${ENV_FILE}
    volumes:
      - ${CORE_VOLUME}
    healthcheck:
      test: wget http://localhost:8080/healthz -q -S -O - || exit 1
      interval: 30s
      timeout: 5s
      retries: 5

  prediction-service:
    pull_policy: always
    image: ${PREDICTION_IMAGE}:${PREDICTION_TAG}
    networks: ['impact-analysis']
    depends_on: ['nats', 'postgres']
    container_name: ${PREDICTION_CONTAINER_NAME}
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    ports:
      - '${PREDICTION_PORT}:8282'
    env_file:
      - ${ENV_FILE}
    volumes:
      - ${PREDICTION_APP_VOLUME}

  dashboard:
    pull_policy: always
    image: ${DASHBOARD_IMAGE}:${DASHBOARD_TAG}
    container_name: dashboard
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    volumes:
      - ./runtime-config.js:/usr/share/nginx/html/runtime-config.js
    networks: ['impact-analysis']
    depends_on: ['core']
    ports:
      - 3000:8080
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/nginx_status']
      interval: 30s
      timeout: 5s
      retries: 5

  miner-api:
    pull_policy: always
    container_name: ${MINER_API_CONTAINER_NAME}
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    image: ${MINER_API_IMAGE}:${MINER_API_TAG}
    env_file:
      - ${ENV_FILE}
    ports:
      - '${MINER_API_PORT}:8181'
    networks: ['impact-analysis']
    depends_on: ['core', 'orientdb']
    volumes:
      - ${USER_VOLUME}:${REPOSITORY_VOLUME}

  miner-scheduler:
    pull_policy: always
    container_name: ${MINER_SCHEDULER_CONTAINER_NAME}
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    image: ${MINER_SCHEDULER_IMAGE}:${MINER_SCHEDULER_TAG}
    env_file:
      - ${ENV_FILE}
    networks: ['impact-analysis']
    depends_on: ['core', 'orientdb']
    volumes:
      - ${USER_VOLUME}:${REPOSITORY_VOLUME}

networks:
  impact-analysis:
    name: impact-analysis

volumes:
  db_data_volume: {}
  orient_data_volume: {}
